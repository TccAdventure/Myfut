// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  COURT_ADMIN
  ADMIN

  @@map("role_type")
}

model User {
  id       String @id @default(uuid()) @db.Uuid
  name     String
  email    String @unique
  password String
  role     Role

  courts Court[]

  @@map("users")
}

model CourtAddress {
  id           String  @id @default(uuid()) @db.Uuid
  courtId      String  @unique @map("court_id") @db.Uuid
  country      String
  state        String
  city         String
  neighborhood String
  street       String
  number       Int
  complement   String?

  court Court @relation(fields: [courtId], references: [id], onDelete: Cascade)

  @@map("courts_addresses")
}

model Court {
  id               String  @id @default(uuid()) @db.Uuid
  userId           String  @map("user_id") @db.Uuid
  name             String
  description      String?
  imageUrl         String?
  linkToGoogleMaps String? @map("link_to_google_maps")

  user              User                @relation(fields: [userId], references: [id], onDelete: Cascade)
  courtAddress      CourtAddress?
  courtAvailability CourtAvailability[]

  @@map("courts")
}

model CourtAvailability {
  id        String @id @default(uuid()) @db.Uuid
  courtId   String @map("court_id") @db.Uuid
  weekday   Int
  startTime String
  endTime   String

  court Court @relation(fields: [courtId], references: [id], onDelete: Cascade)

  @@map("court_availabilities")
}
